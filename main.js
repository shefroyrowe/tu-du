(()=>{"use strict";var n={965:(n,e,r)=>{r.d(e,{A:()=>A});var t=r(354),o=r.n(t),a=r(314),i=r.n(a)()(o());i.push([n.id,"form {\n    position: absolute;\n    box-shadow: 0px 1px 7px 0px rgba(0,0,0,0.75);\n    z-index: 10;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    padding: 1rem;\n    padding-top: .3rem;\n    margin-left: 1rem;\n}\n\nform input, #priority-select {\n    outline: none;\n    border-color: #fff;\n    height: 1rem;\n    text-align: center;\n}\n\nform input:focus::placeholder {\n    opacity: 0;\n}\n\nform label {\n    margin-top: 1rem;\n}\n\n#new-category-form .btn {\n    align-self: center;\n}\n\n#new-category-form {\n    top: 7rem;\n    opacity: 0;\n    display: none;\n    transition: all 600ms;\n}\n\n#new-task-form {\n    top: 5rem;\n    margin-left: 2.5rem;\n    opacity: 0;\n    display: none;\n    transition: all 600ms;\n}\n\nform .btn {\n    width: 7rem;\n    height: 1.5rem;\n    color: aliceblue;\n    font-size: .8rem;\n    margin: .3rem;\n    border-color: #0ba360;\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\n}","",{version:3,sources:["webpack://./src/components/modal.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,4CAA4C;IAC5C,WAAW;IACX,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,aAAa;IACb,kBAAkB;IAClB,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,kBAAkB;IAClB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;IACV,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,mBAAmB;IACnB,UAAU;IACV,aAAa;IACb,qBAAqB;AACzB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,qBAAqB;IACrB,6DAA6D;AACjE",sourcesContent:["form {\r\n    position: absolute;\r\n    box-shadow: 0px 1px 7px 0px rgba(0,0,0,0.75);\r\n    z-index: 10;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 1rem;\r\n    padding-top: .3rem;\r\n    margin-left: 1rem;\r\n}\r\n\r\nform input, #priority-select {\r\n    outline: none;\r\n    border-color: #fff;\r\n    height: 1rem;\r\n    text-align: center;\r\n}\r\n\r\nform input:focus::placeholder {\r\n    opacity: 0;\r\n}\r\n\r\nform label {\r\n    margin-top: 1rem;\r\n}\r\n\r\n#new-category-form .btn {\r\n    align-self: center;\r\n}\r\n\r\n#new-category-form {\r\n    top: 7rem;\r\n    opacity: 0;\r\n    display: none;\r\n    transition: all 600ms;\r\n}\r\n\r\n#new-task-form {\r\n    top: 5rem;\r\n    margin-left: 2.5rem;\r\n    opacity: 0;\r\n    display: none;\r\n    transition: all 600ms;\r\n}\r\n\r\nform .btn {\r\n    width: 7rem;\r\n    height: 1.5rem;\r\n    color: aliceblue;\r\n    font-size: .8rem;\r\n    margin: .3rem;\r\n    border-color: #0ba360;\r\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\r\n}"],sourceRoot:""}]);const A=i},245:(n,e,r)=>{r.d(e,{A:()=>A});var t=r(354),o=r.n(t),a=r(314),i=r.n(a)()(o());i.push([n.id,"* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border-radius: 10px;\n}\n\nhtml,\nbody {\n    display: grid;\n    background-color: #0a3c30;\n    background-size: cover;\n    width: 100%;\n    height: 100vh;\n    color: aliceblue;\n    font-size: 1.4rem;\n    justify-items: center;\n    align-items: center;\n    overflow: hidden;\n    text-shadow: 0 1px 7px rgba(0, 0, 0, 1);\n}\n\n.container img {\n    width: 1rem;\n    height: 1rem;\n}\n\n.display img {\n    margin: .3rem;\n}\n\nh1 {\n    position: absolute;\n    top: 0;\n    width: 100%;\n    font-size: 2rem;\n    border-bottom: 1px solid #3ebb9e;\n    background: linear-gradient(135deg, rebeccapurple, white);\n}\n\nstrong {\n    color:aqua;\n}\n\n.container {\n    display: flex;\n    min-width: 50%;\n    height: 80vh;\n}\n\naside.categories {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    min-width: 30%;\n}\n\naside.categories,\n.display {\n    overflow: hidden;\n    overflow-y: scroll;\n    scrollbar-width: none;\n    border: 2px solid #3ebb9e;\n    border-left: none;\n    border-right: none;\n}\n\n.category-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    min-width: 100%;\n    cursor: default;\n    margin-bottom: .5rem;\n    margin-right: .5rem;\n    padding: .2rem;\n    border: 1px solid #3ebb9e;\n    background: linear-gradient(109.6deg, #00674f 11.2%, #0a3c30 91.1%);\n}\n\n.category-item.active {\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\n}\n\n.display {\n    min-width: 71%;\n    font-size: .8rem;\n    padding: .4rem;\n    letter-spacing: .05rem;\n}\n\n.task-item {\n    margin-bottom: .5rem;\n    padding: .2rem;\n    padding-left: .6rem;\n    border: 1px solid #3ebb9e;\n    background: linear-gradient(109.6deg, #00674f 11.2%, #0a3c30 91.1%);\n}\n\n/*task priority level gradient*/\n\n.mid {\n    background: radial-gradient(circle at 10% 20%, rebeccapurple 0%, rgb(255, 200, 124) 90%);\n}\n\n.high {\n    background: linear-gradient(109.6deg, rgb(162, 2, 63) 11.2%, rgb(231, 62, 68) 53.6%, rgb(255, 129, 79) 91.1%);\n}\n\n#view-modal-btn-container {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    bottom: .5rem;\n}\n\n.open-modal {\n    width: 7rem;\n    height: 1.5rem;\n    color: aliceblue;\n    font-size: .8rem;\n    margin: .3rem;\n    border-color: #0ba360;\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\n}\n\n#edit-task,\n#delete-task,\n#delete-category {\n    transition: 700ms ease;\n}\n\n#edit-task:hover {\n    background-color: rgba(0, 255, 0, 0.863);\n}\n\n#delete-task:hover,\n#delete-category:hover {\n    background-color: rgba(255, 0, 0, 0.863);\n}\n\n.btn {\n    transition: 500ms ease;\n    cursor: pointer;\n    text-shadow: 0 1px 7px rgba(0, 0, 0, 1);\n}\n\n.btn:active {\n    transform: translateY(.5rem);\n}\n","",{version:3,sources:["webpack://./src/template.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,mBAAmB;AACvB;;AAEA;;IAEI,aAAa;IACb,yBAAyB;IACzB,sBAAsB;IACtB,WAAW;IACX,aAAa;IACb,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IACrB,mBAAmB;IACnB,gBAAgB;IAChB,uCAAuC;AAC3C;;AAEA;IACI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,eAAe;IACf,gCAAgC;IAChC,yDAAyD;AAC7D;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,aAAa;IACb,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,cAAc;AAClB;;AAEA;;IAEI,gBAAgB;IAChB,kBAAkB;IAClB,qBAAqB;IACrB,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,eAAe;IACf,eAAe;IACf,oBAAoB;IACpB,mBAAmB;IACnB,cAAc;IACd,yBAAyB;IACzB,mEAAmE;AACvE;;AAEA;IACI,6DAA6D;AACjE;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,oBAAoB;IACpB,cAAc;IACd,mBAAmB;IACnB,yBAAyB;IACzB,mEAAmE;AACvE;;AAEA,+BAA+B;;AAE/B;IACI,wFAAwF;AAC5F;;AAEA;IACI,6GAA6G;AACjH;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,gBAAgB;IAChB,gBAAgB;IAChB,aAAa;IACb,qBAAqB;IACrB,6DAA6D;AACjE;;AAEA;;;IAGI,sBAAsB;AAC1B;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;;IAEI,wCAAwC;AAC5C;;AAEA;IACI,sBAAsB;IACtB,eAAe;IACf,uCAAuC;AAC3C;;AAEA;IACI,4BAA4B;AAChC",sourcesContent:["* {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    border-radius: 10px;\r\n}\r\n\r\nhtml,\r\nbody {\r\n    display: grid;\r\n    background-color: #0a3c30;\r\n    background-size: cover;\r\n    width: 100%;\r\n    height: 100vh;\r\n    color: aliceblue;\r\n    font-size: 1.4rem;\r\n    justify-items: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    text-shadow: 0 1px 7px rgba(0, 0, 0, 1);\r\n}\r\n\r\n.container img {\r\n    width: 1rem;\r\n    height: 1rem;\r\n}\r\n\r\n.display img {\r\n    margin: .3rem;\r\n}\r\n\r\nh1 {\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    font-size: 2rem;\r\n    border-bottom: 1px solid #3ebb9e;\r\n    background: linear-gradient(135deg, rebeccapurple, white);\r\n}\r\n\r\nstrong {\r\n    color:aqua;\r\n}\r\n\r\n.container {\r\n    display: flex;\r\n    min-width: 50%;\r\n    height: 80vh;\r\n}\r\n\r\naside.categories {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    min-width: 30%;\r\n}\r\n\r\naside.categories,\r\n.display {\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n    scrollbar-width: none;\r\n    border: 2px solid #3ebb9e;\r\n    border-left: none;\r\n    border-right: none;\r\n}\r\n\r\n.category-item {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    min-width: 100%;\r\n    cursor: default;\r\n    margin-bottom: .5rem;\r\n    margin-right: .5rem;\r\n    padding: .2rem;\r\n    border: 1px solid #3ebb9e;\r\n    background: linear-gradient(109.6deg, #00674f 11.2%, #0a3c30 91.1%);\r\n}\r\n\r\n.category-item.active {\r\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\r\n}\r\n\r\n.display {\r\n    min-width: 71%;\r\n    font-size: .8rem;\r\n    padding: .4rem;\r\n    letter-spacing: .05rem;\r\n}\r\n\r\n.task-item {\r\n    margin-bottom: .5rem;\r\n    padding: .2rem;\r\n    padding-left: .6rem;\r\n    border: 1px solid #3ebb9e;\r\n    background: linear-gradient(109.6deg, #00674f 11.2%, #0a3c30 91.1%);\r\n}\r\n\r\n/*task priority level gradient*/\r\n\r\n.mid {\r\n    background: radial-gradient(circle at 10% 20%, rebeccapurple 0%, rgb(255, 200, 124) 90%);\r\n}\r\n\r\n.high {\r\n    background: linear-gradient(109.6deg, rgb(162, 2, 63) 11.2%, rgb(231, 62, 68) 53.6%, rgb(255, 129, 79) 91.1%);\r\n}\r\n\r\n#view-modal-btn-container {\r\n    display: flex;\r\n    align-items: center;\r\n    position: absolute;\r\n    bottom: .5rem;\r\n}\r\n\r\n.open-modal {\r\n    width: 7rem;\r\n    height: 1.5rem;\r\n    color: aliceblue;\r\n    font-size: .8rem;\r\n    margin: .3rem;\r\n    border-color: #0ba360;\r\n    background: linear-gradient(to top, #0ba360 0%, #3cba92 100%);\r\n}\r\n\r\n#edit-task,\r\n#delete-task,\r\n#delete-category {\r\n    transition: 700ms ease;\r\n}\r\n\r\n#edit-task:hover {\r\n    background-color: rgba(0, 255, 0, 0.863);\r\n}\r\n\r\n#delete-task:hover,\r\n#delete-category:hover {\r\n    background-color: rgba(255, 0, 0, 0.863);\r\n}\r\n\r\n.btn {\r\n    transition: 500ms ease;\r\n    cursor: pointer;\r\n    text-shadow: 0 1px 7px rgba(0, 0, 0, 1);\r\n}\r\n\r\n.btn:active {\r\n    transform: translateY(.5rem);\r\n}\r\n"],sourceRoot:""}]);const A=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},354:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var m=r(d),g={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(g);else{var p=o(g,t);t.byIndex=A,e.splice(A,0,{identifier:d,updater:p,references:1})}i.push(d)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=r(a[i]);e[A].references--}for(var s=t(n,o),c=0;c<a.length;c++){var l=r(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},659:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&(!n||!/^http(s?):/.test(n));)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.nc=void 0;var t=r(72),o=r.n(t),a=r(825),i=r.n(a),A=r(659),s=r.n(A),c=r(56),l=r.n(c),d=r(540),m=r.n(d),g=r(113),p=r.n(g),u=r(245),b={};b.styleTagTransform=p(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=m(),o()(u.A,b),u.A&&u.A.locals&&u.A.locals;var f=r(965),C={};C.styleTagTransform=p(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=m(),o()(f.A,C),f.A&&f.A.locals&&f.A.locals;const y=document.getElementById("new-category-form"),B=document.getElementById("new-task-form"),I=document.getElementById("add-category"),h=document.getElementById("add-task"),v=document.querySelectorAll("#new-task-form input"),w=document.querySelector("#new-task-form #priority-select");let k=!1;const x=()=>{k?(y.style.cssText="opacity: 0; display: none;",document.getElementById("new-category").value="",I.textContent="New Category",k=!1):E||(y.style.cssText="opacity: 1; display: flex;",I.textContent="Cancel Category",k=!0)};window.addCategory=x;let E=!1;const S=()=>{E||"Update"===document.getElementById("task-submit").textContent?(B.style.cssText="opacity: 0; display: none;",v.forEach((n=>n.value="")),w.selectedIndex=0,h.textContent="New Task",document.getElementById("task-submit").textContent="Submit",E=!1):k||(B.style.cssText="opacity: 1; display: flex;",h.textContent="Cancel Task",E=!0)};window.addTask=S;const T=r.p+"62c9d00af535860c1294.svg",j=r.p+"5b77d777069c8253eb74.svg";window.deleteTask=n=>{U.splice(Number(n),1),localStorage.setItem("data",JSON.stringify(U)),J()},window.deleteCategory=n=>{M.splice(Number(n),1),localStorage.setItem("catData",JSON.stringify(M)),Y()};const N=document.getElementById("title"),q=document.getElementById("description"),D=document.getElementById("due-date"),$=document.getElementById("priority-select"),z=document.getElementById("new-category");let U=JSON.parse(localStorage.getItem("data"))||[{title:"(--default render)",description:"placeholder task",dueDate:"11-26-2024",priority:"mid"}],L={},M=JSON.parse(localStorage.getItem("catData"))||[],O="general";class P{constructor(n,e,r,t,o){this.title=n,this.description=e,this.dueDate=r,this.priority=t,this.categoryName=o}}class W{constructor(n){this.title=n}}function J(){document.querySelector(".display").innerHTML=`\n        <div class="task-item low">\n                <p><strong>Title</strong>: ( -default render- )</p>\n                <p><strong>Description</strong>: placeholder task</p>\n                <p><strong>Due-date</strong>: 11-26-2024</p>\n                <p><strong>Priority</strong>: mid</p> \n                <p><strong>Category</strong>: none</p>\n                <img width="25" id="edit-task" class="btn" src="${j}" alt="edit icon svg">\n                <img width="25" id="delete-task" class="btn" src="${T}" alt="trash can icon svg">\n            </div>\n    `,U.map(((n,e)=>{n.categoryName===O&&(document.querySelector(".display").innerHTML+=`\n                <div class="task-item ${n.priority}" id="task${e}"} category="${n.categoryName}">\n                    <p><strong>Title</strong>: ${n.title}</p>\n                    <p><strong>Description</strong>: ${n.description}</p>\n                    <p><strong>Due-date</strong>: ${n.dueDate}</p>\n                    <p><strong>Priority</strong>: ${n.priority}</p>\n                    <p><strong>Category</strong>: ${n.categoryName}</p>\n                    <img width="25" id="edit-task" class="btn" src="${j}" onclick="editTask(${e})" alt="edit icon svg">\n                    <img width="25" id="delete-task" class="btn" src="${T}" onclick="deleteTask(${e})" alt="trash can icon svg">\n                </div>\n            `)})),N.value="",q.value="",D.value="",$.selectedIndex=0,L={}}function Y(){document.querySelector(".categories").innerHTML=`\n                <div class="category-item active">General <span><img width="20" src="${T}"\n                            id="delete-category" class="btn" alt="delete icon svg"></span></div>\n            `,M.map(((n,e)=>{document.querySelector(".categories").innerHTML+=`\n                <div class="category-item" id="${e}">${n.title[0]?.toUpperCase()}${n.title.slice(1)} <span><img width="20" src="${T}"\n                            id="delete-category" class="btn" onclick="deleteCategory(${e})" alt="delete icon svg"></span></div>\n            `})),z.value=""}document.querySelector(".categories").addEventListener("click",(n=>{let e=n.target;O=e.textContent.toLocaleLowerCase(),document.querySelectorAll(".category-item").forEach((n=>n.classList.remove("active"))),e.textContent.toLocaleLowerCase()===O&&(e.classList.add("active"),J())})),window.editTask=n=>{B.style.cssText="opacity: 1; display: flex;",document.getElementById("task-submit").textContent="Update",L=U[n],N.value=L?.title,q.value=L?.description,D.value=L?.dueDate,$.value=L?.priority,U.splice(Number(n),1),localStorage.setItem("data",JSON.stringify(U))},document.getElementById("task-submit").addEventListener("click",(n=>{n.preventDefault(),N.value&&q.value&&D.value&&$.value?(function(n,e,r,t,o){const a=new P(n,e,r,t,o);U.unshift(a),localStorage.setItem("data",JSON.stringify(U))}(N.value,q.value,D.value,$.value,O),J(),S()):alert("Please fill form fields")})),document.getElementById("category-submit").addEventListener("click",(n=>{n.preventDefault(),z.value?(function(n){const e=new W(n);M.push(e),localStorage.setItem("catData",JSON.stringify(M))}(z.value),Y(),x()):alert("Please fill form fields")})),window.onload=()=>{Y(),J()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,